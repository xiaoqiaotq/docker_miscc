# NOTE: This docker-compose.yml is meant to be just an example of how
# you could accomplish this on your own. It is not intended to work in
# all use-cases and must be adapted to fit your needs. This is merely
# a guideline.

# See docs.getsentry.com/on-premise/server/ for full
# instructions

version: '3.4'

x-defaults: &defaults
  restart: unless-stopped
  image: sentry
  depends_on:
    - sentry-redis
    - sentry-postgres
    - sentry-smtp
  env_file: sentry.env
  environment:
    SENTRY_REDIS_HOST: sentry-redis
    SENTRY_POSTGRES_HOST: sentry-postgres
    SENTRY_EMAIL_HOST: sentry-smtp
  volumes:
    - sentry-data:/var/lib/sentry/files
  deploy:  
      placement:
        constraints: [node.role == manager]
  networks:
      - webproxy

services:
  sentry-smtp:
    restart: unless-stopped
    image: tianon/exim4
    deploy:  
      placement:
        constraints: [node.role == manager]
    networks:
      - webproxy     

  sentry-redis:
    restart: unless-stopped
    image: redis:3.2-alpine
    deploy:  
      placement:
        constraints: [node.role == manager]
    networks:
      - webproxy

  sentry-postgres:
    restart: unless-stopped
    image: postgres
    volumes:
      - sentry-postgres:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    deploy:  
      placement:
        constraints: [node.role == manager]
    networks:
      - webproxy
    environment:
      POSTGRES_USER: sentry
      POSTGRES_PASSWORD: sentry
      POSTGRES_DB: sentry

  sentry-web:
    <<: *defaults
    ports:
      - '9000:9000'

  sentry-cron:
    <<: *defaults
    command: run cron

  sentry-worker:
    <<: *defaults
    command: run worker


volumes:
    sentry-data:
    sentry-postgres:

networks:
  webproxy:
    driver: overlay
    attachable: true